enum GenderEnum {
  MALE
  FEMALE
  TRANSGENDER_MALE
  TRANSGENDER_FEMALE
  INTERSEX
  NON_BINARY
}

type Performer {
  id: ID!
  checksum: String!
  name: String
  url: String
  gender: GenderEnum
  twitter: String
  instagram: String
  birthdate: String
  ethnicity: String
  country: String
  eye_color: String
  height: String
  measurements: String
  fake_tits: String
  career_length: String
  tattoos: String
  piercings: String
  aliases: String
  favorite: Boolean!

  image_path: String # Resolver
  scene_count: Int # Resolver
  scenes: [Scene!]!
}

input PerformerCreateInput {
  name: String!
  url: String
  gender: GenderEnum
  birthdate: String
  ethnicity: String
  country: String
  eye_color: String
  height: String
  measurements: String
  fake_tits: String
  career_length: String
  tattoos: String
  piercings: String
  aliases: String
  twitter: String
  instagram: String
  favorite: Boolean
  """This should be base64 encoded"""
  image: String
}

input PerformerUpdateInput {
  id: ID!
  name: String
  url: String
  gender: GenderEnum
  birthdate: String
  ethnicity: String
  country: String
  eye_color: String
  height: String
  measurements: String
  fake_tits: String
  career_length: String
  tattoos: String
  piercings: String
  aliases: String
  twitter: String
  instagram: String
  favorite: Boolean
  """This should be base64 encoded"""
  image: String
}

input PerformerDestroyInput {
  id: ID!
}

type FindPerformersResultType {
  count: Int!
  performers: [Performer!]!
}